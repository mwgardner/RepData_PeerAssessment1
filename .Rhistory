library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data=airquality)
View(airquality)
xyplot(Ozone ~ Wind | Month, data=airquality)
airquality <- transform(airquality, Month=factor(Month))
xyplot(Ozone ~ Wind | Month, data=airquality, layout=c(5,1))
set.seed(10)
x <- rnorm(100)
f <- rep(0:1,each=50)
y <- x + f - f * x + rnorm(100, sd=0.5)
f <- factor(f, labels=c("Group 1","Group 2"))
xyplot(y ~ x | f, layout=c(2,1))
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(h=median(y),lty=2)
})
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(h=median(y),col=2)
})
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(x,y,col=2)
})
library(ggplot2)
library(grid)
library(data.table)
library(dplyr)
library(reshape2)
ddply
ddply()
?ddply
library(dplyr)
ddply()
install.packages("kernlab")
library(knitr)
install.packages("knitr")
install.packages("slidify")
library(markdown)
library(knitr)
getwd()
setwd("./RepData_PeerAssessment1")
getwd()
list.files()
?unzip
getwd()
unzip("./activity.zip",overwrite=TRUE)
?read.csv
activity <- read.csv("./activity.csv",header=TRUE,na.strings="NA",stringsAsFactors=FALSE,colClasses=c("numeric","character","numeric"))
View(activity)
library(lubridate)
tmp <- ymd(activity$date)
View(tmp)
class(tmp)
class(activity$date)
activity <- read.csv("./activity.csv",header=TRUE,na.strings="NA",stringsAsFactors=FALSE,colClasses=c("numeric","character","numeric"))
activity$dateFactor <- as.factor(activity$date)
activity$date <- ymd(activity$date)
tapply(activity$steps,activity$dateFactor,mean)
tapply(activity$steps,activity$dateFactor,mean, na.rm=TRUE)
totalSteps <- tapply(activity$steps,activity$dateFactor,sum, na.rm=TRUE)
class(totalSteps)
View(totalSteps)
activeDays <- activity[!is.na(activity$steps),]
View(activeDays)
activeDays <- activity[!is.na(activity$steps),]
totalSteps <- tapply(activeDays$steps,activeDays$dateFactor,sum)
mean(totalSteps)
View(activeDays)
totalSteps
tapply(activeDays$steps,activeDays$dateFactor,sum)
tapply(activeDays$steps,activeDays$dateFactor,sum, na.rm=TRUE)
mean(totalSteps,na.rm=TRUE)
median(totalSteps,na.rm=TRUE)
totalSteps2 <- totalSteps[!is.na(totalSteps)]
View(totalSteps2)
class(totalSteps2)
library(ggplot2)
g <- qplot(totalSteps2)
print(g)
?qplot
stepHistogram <- qplot(totalSteps[!is.na(totalSteps)],xlab="Total Steps Taken Per Day",ylab="Count",color="darkblue")
print(stepHistogram)
stepHistogram <- qplot(totalSteps[!is.na(totalSteps)],xlab="Total Steps Taken Per Day",ylab="Count",fill="darkblue")
print(stepHistogram)
stepHistogram <- qplot(totalSteps[!is.na(totalSteps)],xlab="Total Steps Taken Per Day",ylab="Count",fill="blue")
print(stepHistogram)
stepHistogram <- qplot(totalSteps[!is.na(totalSteps)],xlab="Total Steps Taken Per Day",ylab="Count")
print(stepHistogram)
stepHistogram <- ggplot(totalSteps[!is.na(totalSteps)]) + geom_histogram(color="black",fill="gray") + labs(x="Total Steps Taken Per Day",y="Frequency")
tmp <- as.data.frame(totalSteps)
View(tmp)
row.names(tmp)
totalSteps <- as.data.frame(totalSteps)
totalSteps$date <- as.factor(row.names(totalSteps))
View(totalSteps)
names(totalSteps) <- c("totSteps","date")
View(totalSteps)
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="gray") + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="darkgray") + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="darkblue") + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="dodgerblue4") + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
setwd("F:/Documents/Education/Coursera_DataScience/RepData_PeerAssessment1")
unzip("./activity.zip",overwrite=TRUE)
activeDays <- activity[!is.na(activity$steps),]
totalSteps <- tapply(activeDays$steps,activeDays$dateFactor,sum)
totalSteps <- as.data.frame(totalSteps)
totalSteps$date <- as.factor(row.names(totalSteps))
names(totalSteps) <- c("totSteps","date")
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="dodgerblue4") + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
mean(totalSteps$totSteps,na.rm=TRUE)
median(totalSteps$totSteps.na.rm=TRUE)
?median
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="dodgerblue4") + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="dodgerblue4") + labs(x="Total Steps Taken Per Day",y="Frequency",binwidth=1000)
print(stepHisto)
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="dodgerblue4") + labs(x="Total Steps Taken Per Day",y="Frequency",stat_bin=1000)
print(stepHisto)
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="dodgerblue4",binwidth=1000) + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(color="black",fill="dodgerblue4",binwidth=625) + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
meanTotSteps
library(ggplot2)
activeDays <- activity[!is.na(activity$steps),]
totalSteps <- tapply(activeDays$steps,activeDays$dateFactor,sum)
totalSteps <- as.data.frame(totalSteps)
totalSteps$date <- as.factor(row.names(totalSteps))
names(totalSteps) <- c("totSteps","date")
stepHisto <- ggplot(totalSteps,aes(x=totSteps)) + geom_histogram(binwidth=1000,color="black",fill="dodgerblue4") + labs(x="Total Steps Taken Per Day",y="Frequency")
print(stepHisto)
meanTotSteps <- mean(totalSteps$totSteps,na.rm=TRUE)
meanTotSteps
medianTotSteps <- median(totalSteps$totSteps,na.rm=TRUE)
medianTotSteps
meanTotSteps
as.character(meanTotSteps)
activeDays$intFactor <- factor(activeDays$interval)
View(activeDays)
meanSteps <- as.data.frame(tapply(activeDays$steps,activeDays$intFactor,mean))
View(meanSteps)
class(row.means(meanSteps))
class(row.names(meanSteps))
meanStepPattern <- as.data.frame(tapply(activeDays$steps,activeDays$intFactor,mean))
meanStepPattern$interval <- as.numeric(row.names(meanStepPattern))
names(meanStepPattern) <- c("meanSteps","interval")
View(meanStepPattern)
class(meanStepPattern[,2])
max(meanStepPattern)
max(meanStepPattern$meanSteps)
maxInt <- which.max(meanStepPattern$meanSteps)
maxInt
?which.max
meanStepPattern$meanSteps[835]
meanStepPattern$meanSteps[104]
maxInt <- meanStepPattern$interval[which.max(meanStepPattern$meanSteps)]
maxInt
pattern <- ggplot(meanStepPattern,aes(x=interval,y=meanSteps)) + geom_line(color="dodgerblue4") + labs(x="Time Interval",y="Mean Steps",title="Mean Steps Taken as a Function of Time of Day")
print(pattern)
tmp <- meanStepPattern$interval
?hm
tmp2 <- hm(tmp)
tmp <- data.frame(interval=tmp,time=tmp2)
View(tmp)
